@page "/trunck/create"
@page "/trunck/edit/{idtrunck}"
@using TruncksProject.Core.Contracts
@using TruncksProject.Core.InputViewModel
@inject NavigationManager navigation
@inject IServiceTrunck serviceTrunck



<h3>@Title</h3>
<br/>

<FormTrunck ButtonTextCancel="Cancelar"
            ButtonTextSubmit="Salvar"
            TrunckInput="@trunck"
            OnValidSubmit="@CreateTrunckSubmit" />
@code {


    public TrunckInput trunck = new TrunckInput();

    [Parameter]
    public string idtrunck { get; set; }


    public string Title { get; set; }

    async Task CreateTrunckSubmit()
    {
        if(trunck.Id != null && idtrunck != null){
            await serviceTrunck.UpdateAsync(trunck);
        }
        else{

            await serviceTrunck.CreateAsync(trunck);
        }        
        navigation.NavigateTo("/listtruncks");

    }

    protected override async Task OnInitializedAsync()
    {
        if(idtrunck != null){
            Title = "Edit trunck";
            trunck.Id = Guid.Parse(idtrunck);
            var trunck_database = await serviceTrunck.GetByIdAsync(trunck.Id);
            trunck = new TrunckInput(
                                        trunck_database.Id,
                                        trunck_database.YearFabrication,
                                        trunck_database.YearModel,
                                        trunck_database.ModelTrunck);
        }
        else
        {
            Title = "Create trunck";
        }

    }
    
}
